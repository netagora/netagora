ECE\Bundle\NetagoraBundle\Entity\User:
  type: entity
  repositoryClass: ECE\Bundle\NetagoraBundle\Entity\UserRepository
  table: na_users
  fields:
    id:
      type: integer
      id: true
      generator:
        strategy: AUTO
    username:        { type: string, length: 255, unique: true }
    salt:            { type: string, length: 255, unique: true }
    password:        { type: string, length: 255, unique: true }
    email:           { type: string, length: 60, unique: true }
    firstName:       { type: string, length: 25, column: first_name }
    lastName:        { type: string, length: 25, column: last_name }
    picture:         { type: string, length: 70, nullable: true }
    location:        { type: string, length: 100, nullable: true }
    birthdate:       { type: date, nullable: true }
    registeredAt:    { type: datetime, nullable: true, column: registered_at }
    twitterID:
      type: string
      length: 10
      column: twitter_id
      nullable: true
      unique: true
    twitterUsername:
      type: string
      length: 25
      column: twitter_username
      nullable: true
      unique: true
    twitterOAuthToken:
      type: string
      length: 60
      column: twitter_oauth_token
      nullable: true
      unique: true
    twitterOAuthSecret:
      type: string
      length: 60
      column: twitter_oauth_secret
      nullable: true
      unique: true
    roles:           { type: string, length: 255 }
    isEnabled:       { type: boolean, column: is_enabled }
  lifecycleCallbacks:
    prePersist:  [ preUpload ]
    postPersist: [ upload ]
    preUpdate:   [ preUpload ]
    postUpdate:  [ upload ]
  oneToMany:
    tokens:
      targetEntity: ServiceToken
      mappedBy: user
      cascade: ["persist", "delete", "merge"]
    publications:
      targetEntity: Publication
      mappedBy: user
      cascade: ["persist", "delete", "merge"]
  manyToMany:
    categories:
      targetEntity: Category
      joinTable:
        name: na_users_categories
        joinColumns:
          user_id:
            referencedColumnName: id
        inverseJoinColumns:
          category_id:
            referencedColumnName: id